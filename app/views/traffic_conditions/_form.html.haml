<script src="http://maps.google.com/maps/api/js?sensor=false"></script>
= javascript_include_tag "traffic_conditions"
.grey-form
  = form_for @traffic_condition do |f|
    -if @traffic_condition.errors.any?
      #error_explanation
        %h2= "#{pluralize(@traffic_condition.errors.count, "error")} prohibited this Traffic Condition / Alert from being saved:"
        %ul
          - @traffic_condition.errors.full_messages.each do |msg|
            %li= msg

    .field
      = f.label :traffic_data_type_id
      -# NOTE: the "str=this.options[selectedIndex].text;hide_or_show(str.substring(0, str.indexOf(' - ')));" extracts the #{tdt.name} part to parm into the hide_or_show_traffic_condition() function
    
      = f.select :traffic_data_type_id, TrafficDataType.find(:all).collect { |tdt| [ "#{tdt.name} - #{tdt.description}", tdt.id ] }, {:include_blank => false}, :style => "width: auto", :onchange => "str=this.options[selectedIndex].text;hide_or_show_traffic_condition(str.substring(0, str.indexOf(' - ')));"
    .field
      = f.label :traffic_camera_id, :id => "traffic_camera_id_label"
      = f.select :traffic_camera_id, TrafficCamera.find(:all, :include => :compass_point).collect  { |tc| [ "#{tc.name} - #{tc.compass_point.name} - #{tc.address}", tc.id ] }, {:include_blank => "Choose Traffic Cam"}, :style => "width: auto"
    .field
      = f.label :report_date
      = f.datetime_select :report_date, :default => 1.minutes.ago, :minute_step => 1, :order => [:month, :day, :year]
    .field
      = f.label :traffic_rating_id
      = f.select :traffic_rating_id, TrafficRating.find(:all).collect  { |tr| [ "#{tr.rating} - #{tr.description}", tr.id ] }, {:include_blank => "Choose Traffic Rating"}, :style => "width: auto;"
    .field
      = f.label :compass_point_id, :id => "compass_point_label"
      = f.select :compass_point_id, CompassPoint.find(:all).collect   { |cp| [ "#{cp.name} - #{cp.description}", cp.id ] }, {:include_blank => "Choose Traffic Direction"}, :style => "width: auto;"
    .field
      = f.label :other_source, :id => "other_source_label"
      = f.text_field :other_source, :size => 50
    .field
      = f.label :other_address, :id => "other_address_label"
      = f.text_field :other_address, :size => 50, :onblur => "geocode_other_address( this.value )"
    .field
      = f.label :other_description, :id => "other_description_label"
      = f.text_field :other_description, :size => 50

    = f.hidden_field 'other_latitude'
    = f.hidden_field 'other_longitude'
  
    .actions
      = submit_button('Save')

  #geocode_results
  
  -# NOTE: This AJAX technique has a TrafficConditionsController#test_populate_div() method that then renders the view "test_populate_div.html.haml" into the div "test_populate_div"
  -# #test_populate_div
  -# works: 
  -# <a href="#" onclick="$('#test_populate_div').load('/traffic_conditions/test_populate_div?param1=billy%20kiskin')">test_populate_div</a>
  -# NOTE: This one has a TrafficConditionsController#test_populate_div_2() method, then a "test_populate_div_2.js.haml" that then renders the partial "_test_populate_div_2.html.haml" into the div "test_populate_div_2"
  -# #test_populate_div_2
  -# works: 
  -# = link_to "test_populate_div_2", traffic_conditions_test_populate_div_2_path(:param1 => "param_1"), { :remote => true }
  -# both of these have routes declared in config/routes.rb

  -# configure the fields based on the traffic_data_type (ie. "LiveCam", "Other:Tweet", etc)
  -# - traffic_data_type_name = TrafficDataType.find(params[:traffic_data_type_id]).name
  
  -# conditionalize this for "traffic_condition"=>{"traffic_data_type_id" or just plain params[:traffic_data_type_id]
  - if params[:traffic_data_type_id]
    -# coming from either the menu or the "Create" link on the traffic_conditions#index page; the params[:traffic_condition]['traffic_data_type_id'] covers the event of a bad save and a redirect to the 'new' action
    %body{ :onload => "hide_or_show_traffic_condition( '#{TrafficDataType.find(params[:traffic_data_type_id]).name}' );" } 
  - elsif params[:traffic_condition]['traffic_data_type_id']
    %body{ :onload => "hide_or_show_traffic_condition( '#{TrafficDataType.find(params[:traffic_condition]['traffic_data_type_id']).name}' );" }
    

